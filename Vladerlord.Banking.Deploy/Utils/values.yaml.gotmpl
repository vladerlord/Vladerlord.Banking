letsencrypt:
  email: vladerlord007@gmail.com
  wildcardDomain: "{{ .Values.banking.wildcardDomain }}"
  devDomain: {{ .Values.banking.devDomain }}
  acmeDomain: {{ .Values.banking.acmeDomain }}
  isProduction: {{ .Values.utils.letsencrypt.isProduction }}

certificates:
  # region linkerd
  - name: linkerd-identity-issuer
    secretName: linkerd-identity-issuer
    namespace: {{ .Values.utils.linkerd.namespace }}
    isCA: true
    duration: 48h
    renewBefore: 25h
    issuerRef:
      name: linkerd-trust-anchor
      kind: Issuer
    commonName: identity.linkerd.cluster.local
    dnsNames:
      - identity.linkerd.cluster.local
    privateKey:
      algorithm: ECDSA
    usages:
      - cert sign
      - crl sign
      - server auth
      - client auth
  - name: linkerd-policy-validator
    secretName: linkerd-policy-validator-k8s-tls
    namespace: {{ .Values.utils.linkerd.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: linkerd-policy-validator.linkerd.svc
    dnsNames:
      - linkerd-policy-validator.linkerd.svc
    privateKey:
      algorithm: ECDSA
      encoding: PKCS8
    usages:
      - server auth
  - name: linkerd-proxy-injector
    secretName: linkerd-proxy-injector-k8s-tls
    namespace: {{ .Values.utils.linkerd.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: linkerd-proxy-injector.linkerd.svc
    dnsNames:
      - linkerd-proxy-injector.linkerd.svc
    privateKey:
      algorithm: ECDSA
    usages:
      - server auth
  - name: linkerd-sp-validator
    secretName: linkerd-sp-validator-k8s-tls
    namespace: {{ .Values.utils.linkerd.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: linkerd-sp-validator.linkerd.svc
    dnsNames:
      - linkerd-sp-validator.linkerd.svc
    privateKey:
      algorithm: ECDSA
    usages:
      - server auth
  # endregion
  # region linkerd-viz
  - name: tap
    secretName: tap-k8s-tls
    namespace: {{ .Values.utils.linkerdViz.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: tap.linkerd-viz.svc
    dnsNames:
      - tap.linkerd-viz.svc
    privateKey:
      algorithm: ECDSA
    usages:
      - server auth
  - name: linkerd-tap-injector
    secretName: tap-injector-k8s-tls
    namespace: {{ .Values.utils.linkerdViz.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: tap-injector.linkerd-viz.svc
    dnsNames:
      - tap-injector.linkerd-viz.svc
    privateKey:
      algorithm: ECDSA
    usages:
      - server auth
  # endregion
  # region jaeger
  - name: jaeger-injector
    secretName: jaeger-injector-k8s-tls
    namespace: {{ .Values.utils.linkerdJaeger.namespace }}
    isCA: false
    duration: 24h
    renewBefore: 1h
    issuerRef:
      name: webhook-issuer
      kind: Issuer
    commonName: jaeger-injector.linkerd-jaeger.svc
    dnsNames:
      - jaeger-injector.linkerd-jaeger.svc
    privateKey:
      algorithm: ECDSA
    usages:
      - server auth
  # endregion

secrets:
  - name: godaddy-api-key
    namespace: {{ .Values.utils.certManager.namespace }}
    type: Opaque
    data:
      - name: token
        value: {{ .Values.secrets.utils.godaddyWebhook.apiKey }}
  # region linkerd
  - name: linkerd-trust-anchor
    namespace: {{ .Values.utils.linkerd.namespace }}
    type: kubernetes.io/tls
    data:
      - name: tls.crt
        file: linkerdCerts/control-plane-ca.crt
      - name: tls.key
        file: linkerdCerts/control-plane-ca.key
  - name: webhook-issuer-tls
    namespace: {{ .Values.utils.linkerd.namespace }}
    type: kubernetes.io/tls
    data:
      - name: tls.crt
        file: linkerdCerts/webhook-ca.crt
      - name: tls.key
        file: linkerdCerts/webhook-ca.key
  # endregion
  # region linkerd-viz
  - name: webhook-issuer-tls
    namespace: {{ .Values.utils.linkerdViz.namespace }}
    type: kubernetes.io/tls
    data:
      - name: tls.crt
        file: linkerdCerts/webhook-ca.crt
      - name: tls.key
        file: linkerdCerts/webhook-ca.key
  # endregion
  # region jaeger
  - name: webhook-issuer-tls
    namespace: {{ .Values.utils.linkerdJaeger.namespace }}
    type: kubernetes.io/tls
    data:
      - name: tls.crt
        file: linkerdCerts/webhook-ca.crt
      - name: tls.key
        file: linkerdCerts/webhook-ca.key
  # endregion

issuers:
  - name: webhook-issuer
    namespace: {{ .Values.utils.linkerd.namespace }}
    ca:
      secretName: webhook-issuer-tls
  - name: linkerd-trust-anchor
    namespace: {{ .Values.utils.linkerd.namespace }}
    ca:
      secretName: linkerd-trust-anchor
  # linkerd-viz
  - name: webhook-issuer
    namespace: {{ .Values.utils.linkerdViz.namespace }}
    ca:
      secretName: webhook-issuer-tls
  # jaeger
  - name: webhook-issuer
    namespace: {{ .Values.utils.linkerdJaeger.namespace }}
    ca:
      secretName: webhook-issuer-tls

ingresses:
  - name: linkerd-viz
    namespace: {{ .Values.utils.linkerdViz.namespace }}
    annotations:
      {{ if .Values.dev.enableOauth }}
      nginx.ingress.kubernetes.io/auth-url: https://{{ .Values.banking.devAuthDomain }}/oauth2/auth
      nginx.ingress.kubernetes.io/auth-signin: https://{{ .Values.banking.devAuthDomain }}/oauth2/start
      {{ end }}
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    tls:
      - hosts:
          - "{{ .Values.banking.wildcardDomain }}"
    enableTls: true
    rules:
      - host: {{ .Values.banking.devDomain }}
        http:
          paths:
            - path: /
              pathType: ImplementationSpecific
              backend:
                service:
                  name: web
                  port:
                    number: 8084
